server:
  port: ${PORT}

spring:
  application:
    name: apigateway-service

  cloud:
    gateway:
      ##### 글로벌 필터 #####
      default-filters:
        - name: GlobalFilter
          args:
            preLogger: true
            postLogger: true

      routes:
        ##### 카탈로그 서비스 #####
        - id: catalog-service
          uri: http://localhost:8080
          predicates:
            - Path=/catalog-service/**
          filters:
            - AddRequestHeader=catalog-header-key-request, catalog-header-value-request
            - AddResponseHeader=catalog-header-key-response, catalog-header-value-request
            - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}
            - name: CustomFilter
            - name: LoggingFilter
              args:
                preLogger: true
                postLogger: true

        ##### 주문 서비스 #####
        - id: order-service
          uri: http://localhost:8081
          predicates:
            - Path=/order-service/**
          filters:
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}

        ##### 사용자 서비스 #####
        # 로그인
        - id: user-service
          uri: http://localhost:8082
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # 회원가입
        - id: user-service
          uri: http://localhost:8082
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        # 사용자 정보 조회
        - id: user-service
          uri: http://localhost:8082
          predicates:
            - Path=/user-service/users/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthFilter

token:
  secret: ${TOKEN_SECRET}

